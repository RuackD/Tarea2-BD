
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.15.0
 * Query Engine version: 1e7af066ee9cb95cf3a403c78d9aab3e6b04f37a
 */
Prisma.prismaVersion = {
  client: "4.15.0",
  engine: "1e7af066ee9cb95cf3a403c78d9aab3e6b04f37a"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.DefensasScalarFieldEnum = {
  id: 'id',
  defensa: 'defensa'
};

exports.Prisma.Defensas_reinosScalarFieldEnum = {
  id_reinos: 'id_reinos',
  id_defensas: 'id_defensas'
};

exports.Prisma.DiplomaciasScalarFieldEnum = {
  id_reino_1: 'id_reino_1',
  id_reino_2: 'id_reino_2',
  es_aliado: 'es_aliado'
};

exports.Prisma.KartsScalarFieldEnum = {
  id: 'id',
  modelo: 'modelo',
  color: 'color',
  velocidad_maxima: 'velocidad_maxima',
  id_personaje: 'id_personaje'
};

exports.Prisma.Personaje_habita_reinoScalarFieldEnum = {
  id_personaje: 'id_personaje',
  id_reino: 'id_reino',
  fecha_registro: 'fecha_registro',
  es_gobernante: 'es_gobernante'
};

exports.Prisma.Personaje_tiene_trabajoScalarFieldEnum = {
  id_trabajo: 'id_trabajo',
  id_personaje: 'id_personaje',
  fecha_inicio: 'fecha_inicio',
  fecha_termino: 'fecha_termino'
};

exports.Prisma.PersonajesScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  fuerza: 'fuerza',
  fecha_nacimiento: 'fecha_nacimiento',
  objeto: 'objeto'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.ReinosScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  ubicacion: 'ubicacion',
  superficie: 'superficie'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.TrabajosScalarFieldEnum = {
  id: 'id',
  descripcion: 'descripcion',
  sueldo: 'sueldo'
};

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});


exports.Prisma.ModelName = {
  Personajes: 'Personajes',
  Karts: 'Karts',
  Personaje_tiene_trabajo: 'Personaje_tiene_trabajo',
  Trabajos: 'Trabajos',
  Personaje_habita_reino: 'Personaje_habita_reino',
  Reinos: 'Reinos',
  Defensas_reinos: 'Defensas_reinos',
  Defensas: 'Defensas',
  Diplomacias: 'Diplomacias'
};

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
